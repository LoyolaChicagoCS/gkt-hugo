@inproceedings{wei-keng_liao_scalable_2003,
 abbr = {Conference},
 abstract = {For concurrent I/O operations, atomicity defines the results in the overlapping file regions simultaneously read/written by requesting processes. Atomicity has been well studied at the file system level, such as POSIX standard. In this paper, we investigate the problems arising from the implementation of MPI atomicity for concurrent overlapping write access and provide a few programming solutions. Since the MPI definition of atomicity differs from the POSIX one, an implementation that simply relies on the POSIX file systems does not guarantee correct MPI semantics. To have a correct implementation of atomic I/O in MPI, we examine the efficiency of three approaches: 1) file locking, 2) graph-coloring, and 3) process-rank ordering. Performance complexity for these methods are analyzed and their experimental results are presented for file systems including NFS, SGI’s XFS, and IBM’s GPFS.},
 author = {Liao, Wei-Keng and Choudhary, Alok N. and Coloma, Kenin and Thiruvathukal, George K. and Ward, Lee and Russell, Eric and Pundit, Neil},
 booktitle = {International Conference on Parallel Processing},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 html = {https://ecommons.luc.edu/cs_facpubs/12/},
 pages = {239--248},
 pdf = {https://ecommons.luc.edu/cs_facpubs/12/},
 title = {Scalable Implementations of MPI Atomicity for Concurrent Overlapping I/O},
 url = {https://ecommons.luc.edu/cs_facpubs/12/},
 year = {2003}
}

